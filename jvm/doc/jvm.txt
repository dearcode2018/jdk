JVM
Java Virtual Memory Java虚拟内存

硬件内存结构
CPU(CPU内部寄存器) --> CPU缓存 --> 主存
CPU(CPU内部寄存器) --> CPU缓存 --> 主存
CPU有多个，主存只有一个，一对多关系.

CPU读取主存的数据到CPU缓存或CPU内部寄存器，执行完毕之后，然后在某个时间点将结果写回主存，因为不是实时刷新，
所以多个CPU在共享同一个对象的时候，就有可能出现不一致的现象.

JVM内存结构: 线程栈(Thread Stack)、堆(Heap)，每个线程有自己的线程栈.
可见性: 多个线程共享一个对象时，一个线程修改操作，对其他线程来说是不可见的，解决方法是变量声明加volatile关键字.
竞争性: 多个线程共享一个对象时，超过1个线程修改对象，这样对象就带有不确定性，以最后一个线程提交到主存的结果为准，
因此在软件逻辑中就需要通过同步机制来解决这种不确定性. 临界区的数据在一个时刻只能被一个线程修改，当一个线程进入
临界区时，其他线程要执行修改只能排队等待.
















